{"version":3,"sources":["app/components/students-list/students.jsx","app/components/view-repository/view.jsx","app/components/student-card/card.jsx","app/components/student-card/subcard.jsx","app/components/view-repository/view-components/header/header.jsx","app/components/view-repository/view-components/commits/commit-card/commit-card.jsx","app/components/view-repository/view-components/commits/commit-template.jsx","app/components/view-repository/view-components/search/search.jsx","app/components/view-repository/view-components/tree/tree.jsx","app/components/view-repository/view-components/tree/tree-components/tree-card.jsx","app/components/view-code/code.jsx","app/App.jsx","reportWebVitals.js","index.js"],"names":["StudentsList","props","className","children","ViewRepository","Card","useState","show","setShow","repository","setRepository","onClick","url","cur","href","fetch","config","serverURL","then","data","json","console","log","Array","isArray","create","src","img","user","width","height","alt","title","SubCard","click","setParentHref","puzzle","ViewHeader","CommitCard","date","Date","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","arg","creater","setDisplay","fetchCommit","message","format","replace","CommitTemplate","elements","commits","style","display","length","map","el","simpleDateFormat","keyCreator","Search","setCommits","visible","setVisible","mutableCommitUrl","commitUrl","onChange","event","filter","toLowerCase","includes","target","value","catch","err","trim","type","placeholder","calendar","id","defaultValue","time","document","getElementById","customDate","originDate","moment","unixtime","alert","select","setCommitDate","setCommit","Tree","float","arrUrl","fileUrl","split","pop","join","setData","back","commit","TreeCard","settings","mutableUrl","folder","file","i","supportImageFormat","code","showCode","sethref","window","open","setFileUrl","commitName","commitDate","ViewCode","setCode","imgLoading","setImgLoading","text","codeView","imgView","setTimeout","close","serverCommitUrl","commitURL","App","students","setStudents","treeItems","setTreeItems","filesystemUrl","setFilesystemUrl","setShowCode","Href","setHref","parentHref","onload","getTreeData","dataUrl","state","result","createKey","Math","floor","now","random","toString","createRepository","name","getCommitName","commitTime","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.58efddc0.chunk.js","sourcesContent":["import React from 'react';\nimport './students.css';\n\nfunction StudentsList(props) {\n  return (\n    <section className=\"students-list\">\n      <h2 className=\"title\">Список студентов</h2>\n      <ul className=\"all-students\">{props.children}</ul>\n    </section>\n  );\n}\n\nexport default StudentsList;\n","import React from 'react';\nimport './view.css';\n\nfunction ViewRepository(props) {\n  return (\n    <section className=\"view\">\n          {props.children}\n    </section>\n  );\n}\n\nexport default ViewRepository;\n","import React,{useState} from 'react';\nimport './card.css';\nimport config from \"../../../config.json\";\nfunction Card(props) {\n  let [show, setShow] = useState(false);\n  let [repository, setRepository] = useState([]);\n  \n  const getRepository = ( url ) =>{\n    fetch(`${config.url.serverURL}${url}`)\n      .then(data => data.json())\n      .then(data => {\n        console.log(data)\n        if(Array.isArray(data)){\n            setRepository(props.create(data))\n          }\n      })\n  }\n  \n  const showHandler = () => {\n      if(show === false){\n          setShow(cur=> !cur);\n          getRepository(props.href);\n      }else{\n          setShow(cur=> !cur);\n          setRepository([]);\n      }\n  }\n\n  return (\n      <li>\n        <div className=\"card\" onClick={showHandler}>\n          <img className=\"card-img\"src={config.img.user} width=\"28\" height=\"28\" alt=\"user\"/>\n          <p className=\"person\" title={props.title}>{props.title}</p>\n        </div>\n        <ul className=\"sub-card\">{repository}</ul>\n      </li>\n  );\n}\nexport default Card;\n","import React from 'react';\nimport config from \"../../../config.json\";\nfunction SubCard(props) {\n  return (\n      <li className=\"card\" onClick={()=>{\n          props.click(props.href)\n          props.setParentHref(props.href)\n      }}>\n      <img className=\"card-img\"src={config.img.puzzle} width=\"28\" height=\"28\" alt=\"task\"/>\n        <p>{props.title}</p>\n      </li>\n  );\n}\n\nexport default SubCard;\n","import React from 'react';\nimport './header.css';\nimport config from '../../../../../config.json';\nfunction ViewHeader(props) {\n  return(\n    <header className=\"view-header\">\n        <img className=\"view-img\"src={config.img.user} alt=\"user\" width=\"28\" height=\"28\"/>\n        <p>{props.url}</p>\n    </header>\n  )\n}\n\nexport default ViewHeader;\n","import React from 'react';\n\nfunction CommitCard(props){\n    var date = new Date(props.date*1000);\n\n    let formatter = new Intl.DateTimeFormat(\"ru\", {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n    });\n\n    const fetchCommit = ( arg ) =>{\n        let url = props.href+'?commit='+arg;\n        props.creater(url, false);\n        props.setDisplay('none');\n        console.log(url)\n    }  \n    \n    return(\n        <div className=\"commitCard\" onClick={()=>fetchCommit(props.date)}>\n            <p className=\"commitMessage\">{props.message}</p>\n            <p className=\"commitDate\">{formatter.format(date).replace(',', '')}</p>\n        </div>\n    )\n}\n\nexport default CommitCard;","import React from 'react';\nimport CommitCard from './commit-card/commit-card.jsx'\nimport './commit.css'\n\nfunction CommitTemplate(props){\n    let elements = props.commits;\n    return(\n        <section className=\"commitTemplate\" style={{display: props.display}}>\n            {elements.length > 0 ? elements.map(el=> {\n                return  <CommitCard setDisplay={props.setDisplay} href={props.href} creater={props.creater} url={props.url} key={props.keyCreator()} message={el.message} date={el.simpleDateFormat}></CommitCard>\n            }) : <p>Ничего не найдено!</p>}\n        </section>\n    )\n}\n\nexport default CommitTemplate;","import  React, {useState} from 'react';\nimport  './search.css';\nimport  CommitTemplate from '../commits/commit-template.jsx';\nimport  moment from 'moment';\nimport config from \"../../../../../config.json\"\nfunction Search(props){\n    let [commits, setCommits] = useState([]);\n    let [visible, setVisible] = useState('none');\n    let mutableCommitUrl = props.commitUrl + props.url;\n    \n    const getCommits = ( ) =>{\n        if(visible === 'none'){\n            fetch(mutableCommitUrl)\n                .then(data=>data.json())\n                .then(data=>{setCommits(data)})\n                .catch(()=>console.log('err'));\n                setVisible('block');\n        }else{\n            setVisible('none');\n            setCommits([])\n        }\n    }\n    \n    const getCommitsOnDate = ( event ) =>{\n        setVisible('block');\n        let time = document.getElementById('time-date');\n        let date = document.getElementById('date-date');\n        let customDate = date.value+' '+time.value+':59';\n        let originDate = moment(customDate, 'DD/MM/YYYY HH:mm:ss').format('DD.MM.YYYY HH:mm:ss');\n\n        if(originDate !== 'Invalid date' && time.value.length < 6 && date.value.length < 11){\n            let unixtime = moment(originDate, 'DD.MM,YYYY HH:mm:ss').format('X');\n            console.log(unixtime)\n            fetch(mutableCommitUrl+'?unixTime='+unixtime)\n                .then(data=>data.json())\n                .then(data=>setCommits(data))\n            \n        }else{\n            setVisible('none');\n            alert('Дата или время, указано не правильно!')\n            time.value = '00:00';\n            date.value = moment(new Date(), 'DD/MM/YYYY').format('DD.MM.YYYY');\n        }\n\n    }\n\n    const searchCommits = ( event ) =>{\n        setVisible('block');\n\n        fetch(mutableCommitUrl)\n        .then(data=>data.json())\n        .then(data=>setCommits(()=>{\n            return data.filter(el=>{ \n                console.log(el)\n                return el.message.toLowerCase().includes(event.target.value.toLowerCase())\n            })\n        }))\n        .catch( err=>console.log(err));\n        \n        if(event.target.value.trim() === ''){\n            setVisible('none')\n        }\n    }\n\n    return(\n        <>\n            <section className=\"search\">\n                <input onChange={searchCommits} className=\"search-input\" type=\"text\" placeholder=\"Поиск\"/>\n                <div className=\"search-item search-item__item\">\n                    <img className=\"search-img\" src={config.img.calendar} alt=\"date\" width=\"22\" height=\"22\"/>\n                    <div className=\"text-item\">\n                        <input id=\"date-date\" className='search-item_date' defaultValue=\"31.12.2021\"type='text'/>\n                        <input id=\"time-date\" className='search-item_date' defaultValue=\"00:00\" type='text'/>\n                        <button className='search-item_date btn-date' onClick={getCommitsOnDate}>Поиск</button>\n                    </div>\n                </div>\n                <div className=\"search-item search-item-i\" onClick={getCommits}>\n                    <img className=\"search-img\" src={config.img.select} alt=\"date\" width=\"22\" height=\"22\"/>\n                    <p className=\"text-item\">\n                        Выбрать коммит\n                    </p>\n                </div>\n            </section>\n            <CommitTemplate  \n                setCommitDate = {props.setCommitDate} \n                setCommit={props.setCommit} \n                setDisplay={setVisible} \n                href={props.href} \n                creater={props.creater} \n                url={props.url} \n                display={visible} \n                commits = {commits} \n                keyCreator={props.keyCreator}\n            />\n        </>\n    )\n}\n\nexport default Search;\n","import React from 'react';\nimport './tree.css'\nimport config from \"../../../../../config.json\"\nfunction Tree(props){\n    const parsUrl = ( ) =>{\n        let arrUrl = props.fileUrl.split('/');\n        arrUrl.pop()\n        arrUrl = arrUrl.join('/');\n\n        if(arrUrl.includes('.git')){\n            props.setData(arrUrl)\n            fetch(`${config.url.serverURL}${arrUrl}?drop=all`)       \n        }\n    }\n\n    return(\n        <div className=\"Tree\">\n            <div style={{display:\"block\", width:\"100%\",height:\"40px\"}}>\n                <button style={{float:'left'}} className=\"prev-Tree\"onClick={parsUrl}>\n                    <img src={config.img.back} alt=\"back\" width=\"22\" height=\"22\"/>\n                </button>\n                <p className=\"commit-naming\" title={props.commit}>Commit: {props.commit}</p>\n            </div>\n            {props.create(props.data, true)}\n        </div>\n    )\n}\n\nexport default Tree;","import React from 'react';\nimport './tree-card.css';\nimport config from \"../../../../../../config.json\"\nfunction TreeCard(props){\n    let img;\n    let settings;\n    let mutableUrl = props.url+props.href;\n    \n    if(props.type === 'FOLDER' || props.type === \"REPOSITORY\"){\n        img = <img src={config.img.folder} width=\"22\" height=\"22\"/>;\n        settings = '';\n    }else{\n        img = <img src={config.img.file} width=\"22\" height=\"22\"/>;\n        for(let i = 0; i<config.supportImageFormat.length; i++){\n            settings = function(){    \n                return (\n                        <img className=\"tree-card-img\" src={config.img.code} alt=\"date\" width=\"22\" height=\"22\" \n                            onClick={()=>{\n                                props.showCode({display: 'flex'})\n                                props.sethref(mutableUrl)\n                            }} \n                        />\n                    )\n            }();\n        }\n    }\n\n    let formatter = new Intl.DateTimeFormat(\"ru\", {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n    });\n    \n    const getNewData = ( ) =>{\n        if(props.type !== 'FOLDER' && props.type !== \"REPOSITORY\"){\n            window.open(mutableUrl);\n        }else{\n            fetch(mutableUrl)\n                .then(data => data.json())\n                .then(data => {\n                    props.data(data)\n                    props.setFileUrl(props.href);\n                })\n        }\n    }\n    return(\n        <div className=\"tree-card\">\n            {img}\n            <p className=\"tree-card-item\" onClick={getNewData}>{props.title}</p>\n            <p className=\"tree-card-item\" title={props.commitName}>{props.commitName}</p>\n            <p className=\"tree-card-item\">{formatter.format(props.commitDate*1000).replace(',', '')}</p>\n            {settings}\n        </div>\n    )\n}\n\nexport default TreeCard;\n","import React,{useState} from 'react';\nimport config from \"../../../config.json\";\nimport './code.css';\n\nfunction ViewCode(props){\n    let [code, setCode] = useState('');\n    let [imgLoading, setImgLoading] = useState('');\n    fetch(props.href)\n        .then(data=> data.text())\n        .then(data=> {\n            let codeView = document.getElementById('code');\n            let imgView = document.getElementById('img-Code')\n            if(props.href.includes('.svg') === true || props.href.includes('.ico') === true || props.href.includes('.png') === true || props.href.includes('.jpg') === true){\n                setImgLoading(props.href);\n                setTimeout(()=>{\n                    codeView.style.display = \"none\";\n                    imgView.style.display = \"block\";\n                }, 0)\n            }else{\n                setCode(data);\n                setTimeout(()=>{\n                    codeView.style.display = \"block\";\n                    imgView.style.display = \"none\";\n                }, 0)\n            }\n        })  \n    return(\n        <div className=\"bg-view\" style={props.style}>\n                <div className=\"ViewCode\">\n                <img className=\"closeBtn\" onClick={()=>props.showCode({display:\"none\"})} src={config.img.close} alt=\"close\" width=\"22\" height=\"22\" />\n                <pre id=\"code\" className=\"ViewContent\">\n                    {code}        \n                </pre>\n                <div className=\"ViewContentImg\">\n                <img id=\"img-Code\" src={imgLoading} className=\"ViewImg--S\" alt=\"view\"/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewCode;","import                   './app.css';\nimport React, {useState} from 'react';\nimport StudentsList      from './components/students-list/students.jsx';\nimport ViewRepository    from './components/view-repository/view.jsx';\nimport Card              from './components/student-card/card.jsx';\nimport SubCard           from './components/student-card/subcard.jsx';\nimport ViewHeader        from './components/view-repository/view-components/header/header.jsx';\nimport Search            from './components/view-repository/view-components/search/search.jsx'\nimport Tree              from './components/view-repository/view-components/tree/tree.jsx';\nimport TreeCard          from './components/view-repository/view-components/tree/tree-components/tree-card.jsx';\nimport ViewCode          from './components/view-code/code.jsx'\nimport config from '../config.json'\n\nconst serverURL          =  config.url.serverURL;\nconst serverCommitUrl    =  config.url.commitURL;\n\n\nfunction App() {\n  let [students, setStudents] = useState([]);\n  let [treeItems, setTreeItems] = useState([]);\n  let [filesystemUrl, setFilesystemUrl] = useState('')\n  let [showCode, setShowCode] = useState({display: 'none'});\n  let [Href, setHref] = useState('');\n  let [parentHref, setParentHref] = useState('');\n  let [commit, setCommit] = useState('');\n\n  window.onload = function(){\n      fetch(serverURL)\n        .then(data => data.json())\n        .then(data => setStudents(data));\n  }\n\n  const getTreeData = ( dataUrl, state ) =>{\n    let mutableUrl = serverURL + dataUrl;\n    fetch(mutableUrl)\n      .then(data => data.json())\n      .then(data => {\n        if(data.result === 'Exception of load commit'){\n          alert(data.result);\n        }else{\n          if(state !== false){\n            setFilesystemUrl(dataUrl);\n          }\n          setTreeItems(data)\n        }\n      })\n  }\n  \n  const createKey = ( ) =>{\n      return Math.floor(Date.now())+Math.random().toString()\n  }\n  \n  const createRepository = ( data ) =>{\n      return data.map(el=>{\n        return(  \n            <SubCard \n              key={createKey()} \n              title={el.name} \n              click={getTreeData} \n              href={el.href}\n              setParentHref={setParentHref}\n            />\n          )\n      })\n  }\n\n  const getCommitName = ( commit ) =>{\n    fetch(serverCommitUrl + parentHref + '/allcommits')\n      .then(data=>data.json())\n      .then(data=>{\n        data.map(el=>{\n          if(+el.simpleDateFormat === commit){\n            setCommit(el.message)\n          }\n        })\n      })\n    } \n\n  const createTreeCard = ( data ) =>{\n      return data.map((el)=>{\n        return ( \n          <TreeCard \n            commitDate={el.commitTime}\n            commit={getCommitName(el.commitTime)}\n            sethref={setHref} \n            showCode={setShowCode} \n            setFileUrl = {setFilesystemUrl} \n            url={serverURL} \n            key={createKey()} \n            title={el.name} \n            href={el.href} \n            type={el.state} \n            data={setTreeItems}\n          />\n        )\n    });\n  }\n\n  return (\n    <section className=\"main-content\">\n      <StudentsList>\n        {\n          students.map(el=>{\n              return (\n                <Card \n                  key={createKey()} \n                  create={createRepository} \n                  title={el.name} \n                  href={el.href}\n                />\n              )\n          })\n        }\n      </StudentsList>\n      <ViewRepository>\n        <ViewHeader url={filesystemUrl}/>\n        <Search href={filesystemUrl} \n              creater={getTreeData} \n              keyCreator={createKey} \n              commitUrl={serverCommitUrl} \n              url={filesystemUrl}\n        />\n        <section className=\"view-content\">\n          <Tree create={createTreeCard} \n              url={serverURL} \n              commit={commit}\n              data={treeItems} \n              setData={getTreeData} \n              fileUrl ={filesystemUrl} \n              setFileUrl = {setFilesystemUrl}\n          />\n        </section>\n      </ViewRepository>\n      <ViewCode style={showCode} showCode={setShowCode} href={Href}/>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}