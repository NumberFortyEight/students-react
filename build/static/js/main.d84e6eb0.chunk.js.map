{"version":3,"sources":["app/components/students-list/students.jsx","app/components/view-repository/view.jsx","app/components/student-card/card.jsx","app/components/student-card/subcard.jsx","app/components/view-repository/view-components/header/header.jsx","app/components/view-repository/view-components/commits/commit-card/commit-card.jsx","app/components/view-repository/view-components/commits/commit-template.jsx","app/components/view-repository/view-components/search/search.jsx","app/components/view-repository/view-components/tree/tree.jsx","app/components/view-repository/view-components/tree/tree-components/tree-card.jsx","app/components/view-code/code.jsx","app/components/filter/filter.jsx","app/App.jsx","reportWebVitals.js","index.js"],"names":["StudentsList","props","className","children","ViewRepository","Card","useState","show","setShow","repository","setRepository","onClick","url","cur","href","fetch","then","data","json","create","src","width","height","alt","title","SubCard","click","ViewHeader","CommitCard","date","Date","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","arg","console","log","creater","setDisplay","alert","message","fetchCommit","format","replace","CommitTemplate","elements","commits","style","display","length","map","el","simpleDateFormat","keyCreator","Search","setCommits","visible","setVisible","mutableCommitUrl","commitUrl","onChange","event","filter","toLowerCase","includes","target","value","catch","err","trim","type","placeholder","Tree","arrUrl","fileUrl","split","pop","join","setData","TreeCard","img","settings","mutableUrl","showCode","sethref","window","open","setFileUrl","ViewCode","code","setCode","text","id","Filter","serverURL","App","students","setStudents","treeItems","setTreeItems","filesystemUrl","setFilesystemUrl","setShowCode","Href","setHref","onload","getTreeData","dataUrl","state","result","createKey","Math","floor","now","random","toString","createRepository","name","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d84e6eb0.chunk.js","sourcesContent":["import React from 'react';\nimport './students.css';\n\nfunction StudentsList(props) {\n  return (\n    <section className=\"students-list\">\n      <h2 className=\"title\">Список студентов</h2>\n      <ul className=\"all-students\">{props.children}</ul>\n    </section>\n  );\n}\n\nexport default StudentsList;\n","import React from 'react';\nimport './view.css';\n\nfunction ViewRepository(props) {\n  return (\n    <section className=\"view\">\n          {props.children}\n    </section>\n  );\n}\n\nexport default ViewRepository;\n","import React,{useState} from 'react';\nimport './card.css';\n\nfunction Card(props) {\n  let [show, setShow] = useState(false);\n  let [repository, setRepository] = useState([]);\n  \n  const getRepository = ( url ) =>{\n    fetch(`http://10.3.0.105:8030/api${url}`)\n      .then(data => data.json())\n      .then(data => setRepository(props.create(data)))\n  }\n  \n  const showHandler = () => {\n      if(show === false){\n          setShow(cur=> !cur);\n          getRepository(props.href);\n      }else{\n          setShow(cur=> !cur);\n          setRepository([]);\n      }\n  }\n\n  return (\n      <li>\n        <div className=\"card\" onClick={showHandler}>\n          <img className=\"card-img\"src=\"./user.svg\" width=\"28\" height=\"28\" alt=\"user\"/>\n          <p className=\"person\" title={props.title}>{props.title}</p>\n        </div>\n        <ul className=\"sub-card\">{repository}</ul>\n      </li>\n  );\n}\nexport default Card;\n","import React from 'react';\n\nfunction SubCard(props) {\n  return (\n      <li className=\"card\" onClick={()=>props.click(props.href)}>\n      <img className=\"card-img\"src=\"./puzzle.svg\" width=\"28\" height=\"28\" alt=\"task\"/>\n        <p>{props.title}</p>\n      </li>\n  );\n}\n\nexport default SubCard;\n","import React from 'react';\nimport './header.css';\nfunction ViewHeader(props) {\n  return(\n    <header className=\"view-header\">\n        <img className=\"view-img\"src=\"./user.svg\" alt=\"user\" width=\"28\" height=\"28\"/>\n        <p>{props.url}</p>\n    </header>\n  )\n}\n\nexport default ViewHeader;\n","import React from 'react';\n\nfunction CommitCard(props){\n    var date = new Date(props.date*1000);\n\n    let formatter = new Intl.DateTimeFormat(\"ru\", {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n    });\n\n    const fetchCommit = ( arg ) =>{\n        let url = props.href+'?commit='+arg;\n        console.log(props.href)\n        props.creater(url, false);\n        props.setDisplay('none');\n        alert(`Коммит  ${props.message}  применен!`)\n    }  \n    return(\n        <div className=\"commitCard\" onClick={()=>fetchCommit(props.date)}>\n            <p className=\"commitMessage\">{props.message}</p>\n            <p className=\"commitDate\">{formatter.format(date).replace(',', '')}</p>\n        </div>\n    )\n}\n\nexport default CommitCard;","import React from 'react';\nimport CommitCard from './commit-card/commit-card.jsx'\nimport './commit.css'\n\nfunction CommitTemplate(props){\n    let elements = props.commits;\n    return(\n        <section className=\"commitTemplate\" style={{display: props.display}}>\n            {elements.length > 0 ? elements.map(el=> {\n                return  <CommitCard setDisplay={props.setDisplay} href={props.href} creater={props.creater} url={props.url} key={props.keyCreator()} message={el.message} date={el.simpleDateFormat}></CommitCard>\n            }) : <p>Ничего не найдено!</p>}\n        </section>\n    )\n}\n\nexport default CommitTemplate;","import  React, {useState} from 'react';\nimport './search.css';\nimport CommitTemplate from '../commits/commit-template.jsx';\n\nfunction Search(props){\n    let [commits, setCommits] = useState([]);\n    let [visible, setVisible] = useState('none');\n    let mutableCommitUrl = props.commitUrl + props.url;\n    \n    const getCommits = ( ) =>{\n        if(visible === 'none'){\n            fetch(mutableCommitUrl)\n            .then(data=>data.json())\n            .then(data=>setCommits(data))\n            .catch(()=>console.log('err'));\n            setVisible('block');\n        }else{\n            setVisible('none');\n            setCommits([])\n        }\n    }\n    \n    const getCommitsOnDate = ( event ) =>{\n        setVisible('block');\n        \n        //  filter\n        \n        if(event.target.value.trim() === ''){\n            setVisible('none')\n        }\n    }\n\n    const searchCommits = ( event ) =>{\n        setVisible('block');\n\n        fetch(mutableCommitUrl)\n        .then(data=>data.json())\n        .then(data=>setCommits(()=>{\n           return data.filter(el=>{ \n               return el.message.toLowerCase().includes(event.target.value.toLowerCase())\n            })\n        }))\n        .catch( err=>console.log('err'));\n        \n        if(event.target.value.trim() === ''){\n            setVisible('none')\n        }\n     }\n    return(\n        <>\n            <section className=\"search\">\n                <input onChange={searchCommits} className=\"search-input\" type=\"text\" placeholder=\"Поиск\"/>\n                <div className=\"search-item\">\n                    <img className=\"search-img\" src=\"./calendar.svg\" alt=\"date\" width=\"22\" height=\"22\"/>\n                    <p className=\"text-item\">\n                    <input placeholder=\"01.08.18\" className=\"focusThis\" type='text' onChange={getCommitsOnDate}/>\n                    </p>\n                </div>\n                <div className=\"search-item\" onClick={getCommits}>\n                    <img className=\"search-img\" src=\"./select.svg\" alt=\"date\" width=\"22\" height=\"22\"/>\n                        <p className=\"text-item\">\n                            Выбрать коммит\n                        </p>\n                </div>\n            </section>\n            <CommitTemplate setDisplay={setVisible} href={props.href} creater={props.creater} url={props.url} display={visible} commits = {commits} keyCreator={props.keyCreator}></CommitTemplate>\n        </>\n    )\n}\n\nexport default Search;\n","import React from 'react';\nimport './tree.css'\n\nfunction Tree(props){\n    const parsUrl = ( ) =>{\n        let arrUrl = props.fileUrl.split('/');\n        arrUrl.pop()\n        arrUrl = arrUrl.join('/');\n        if(arrUrl.includes('.git')){\n            props.setData(arrUrl)\n        }\n    }\n\n    return(\n        <div className=\"Tree\">\n            <button className=\"prev-Tree\"onClick={parsUrl}>\n                <img src=\"./back.svg\" alt=\"back\" width=\"22\" height=\"22\"/>\n            </button>\n            {props.create(props.data, true)}\n        </div>\n    )\n}\n\nexport default Tree;","import React from 'react';\nimport './tree-card.css'\nfunction TreeCard(props){\n    let img;\n    let settings;\n    let mutableUrl = props.url+props.href;\n\n    if(props.type === 'FOLDER' || props.type === \"REPOSITORY\"){\n        img = <img src=\"./folder.svg\" width=\"22\" height=\"22\"/>;\n        settings = '';\n    }else{\n        img = <img src=\"./file.svg\" width=\"22\" height=\"22\"/>;\n        settings = <img onClick={()=>{\n            props.showCode({display: 'flex'})\n            props.sethref(mutableUrl)\n        }} className=\"tree-card-img\" src=\"./code.svg\" alt=\"date\" width=\"22\" height=\"22\"/>;\n    }\n    const getNewData = ( ) =>{\n        if(props.type !== 'FOLDER' && props.type !== \"REPOSITORY\"){\n            window.open(mutableUrl);\n        }else{\n            fetch(mutableUrl)\n                .then(data => data.json())\n                .then(data => {\n                    props.data(data)\n                    props.setFileUrl(props.href);\n                })\n        }\n    }\n    return(\n        <div className=\"tree-card\">\n            {img}\n            <p className=\"tree-card-item\" onClick={getNewData}>{props.title}</p>\n            <p className=\"tree-card-item\"></p>\n            <p className=\"tree-card-item\"></p>\n            {settings}\n        </div>\n    )\n}\n\nexport default TreeCard;\n","import React,{useState} from 'react';\nimport './code.css';\n\nfunction ViewCode(props){\n    let [code, setCode] = useState('');\n    fetch(props.href)\n    .then(data=> data.text())\n    .then(data=> { \n        setCode(data) \n    })    \n    return(\n        <div className=\"bg-view\" style={props.style}>\n               <div className=\"ViewCode\">\n               <img className=\"closeBtn\" onClick={()=>props.showCode({display:\"none\"})} src=\"./close.svg\" alt=\"close\" width=\"22\" height=\"22\" />\n                <pre id=\"code\" className=\"ViewContent\">\n                    {code}        \n                </pre>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewCode;","import './filter.css'\n\nfunction Filter(){\n    return(\n        <section className=\"filter\">\n            <span className=\"filter-item\">Название: new css and html</span><br/>\n            <span className=\"filter-item filter_date\">Фильтр: Взять все коммиты до 01.08.18</span>\n        </section>\n    )\n}\n\nexport default Filter;","import React, {useState} from 'react';\nimport StudentsList      from './components/students-list/students.jsx';\nimport ViewRepository    from './components/view-repository/view.jsx';\nimport Card              from './components/student-card/card.jsx';\nimport SubCard           from './components/student-card/subcard.jsx';\nimport ViewHeader        from './components/view-repository/view-components/header/header.jsx';\nimport Search            from './components/view-repository/view-components/search/search.jsx'\nimport Tree              from './components/view-repository/view-components/tree/tree.jsx';\nimport TreeCard          from './components/view-repository/view-components/tree/tree-components/tree-card.jsx';\nimport ViewCode          from './components/view-code/code.jsx'\nimport Filter            from './components/filter/filter.jsx'\nimport './app.css';\n\nconst serverURL          = 'http://10.3.105:8030/api';\nconst serverCommitUrl    = 'http://10.3.105:8030/commit';\n\nfunction App() {\n  let [students, setStudents] = useState([]);\n  let [treeItems, setTreeItems] = useState([]);\n  let [filesystemUrl, setFilesystemUrl] = useState('')\n  let [showCode, setShowCode] = useState({display: 'none'});\n  let [Href, setHref] = useState('');\n\n  window.onload = function(){\n      fetch(serverURL)\n        .then(data => data.json())\n        .then(data => setStudents(data));\n  }\n  const getTreeData = ( dataUrl, state ) =>{\n    let mutableUrl = serverURL + dataUrl;\n    fetch(mutableUrl)\n      .then(data => data.json())\n      .then(data => {\n        if(data?.result){\n          alert(data.result);\n        }else{\n          if(state !== false){\n            setFilesystemUrl(dataUrl);\n          }\n          setTreeItems(data)\n        }\n      })\n  }\n  \n  const createKey = ( ) =>{\n      return Math.floor(Date.now())+Math.random().toString()\n  }\n  \n  const createRepository = ( data ) =>{\n      return data.map(el=><SubCard key={createKey()} title={el.name} click={getTreeData} href={el.href}></SubCard>)\n  }\n  \n  const createTreeCard = ( data ) =>{\n      return data.map(el=><TreeCard sethref={setHref} showCode={setShowCode} setFileUrl = {setFilesystemUrl} url={serverURL} key={createKey()} title={el.name} href={el.href} type={el.state} data={setTreeItems}/>);\n  }\n  return (\n    <section className=\"main-content\">\n      <StudentsList>\n        {students.map(el=><Card key={createKey()} create={createRepository} title={el.name} href={el.href}/>)}\n      </StudentsList>\n      <ViewRepository>\n        <ViewHeader url={filesystemUrl}/>\n        <Search href={filesystemUrl} creater={getTreeData} keyCreator={createKey} commitUrl={serverCommitUrl} url={filesystemUrl}/>\n        <Filter />\n        <section className=\"view-content\">\n          <Tree create={createTreeCard} url={serverURL} data={treeItems} setData={getTreeData} fileUrl ={filesystemUrl} setFileUrl = {setFilesystemUrl}></Tree>\n        </section>\n      </ViewRepository>\n      <ViewCode style={showCode} showCode={setShowCode} href={Href}/>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}