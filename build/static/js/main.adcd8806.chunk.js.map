{"version":3,"sources":["app/components/students-list/students.jsx","app/components/view-repository/view.jsx","app/components/student-card/card.jsx","app/components/student-card/subcard.jsx","app/components/view-repository/view-components/header/header.jsx","app/components/view-repository/view-components/commits/commit-card/commit-card.jsx","app/components/view-repository/view-components/commits/commit-template.jsx","app/components/view-repository/view-components/search/search.jsx","app/components/view-repository/view-components/tree/tree.jsx","app/components/view-repository/view-components/tree/tree-components/tree-card.jsx","app/components/view-code/code.jsx","app/App.jsx","reportWebVitals.js","index.js"],"names":["StudentsList","props","className","children","ViewRepository","Card","useState","show","setShow","repository","setRepository","onClick","url","cur","href","fetch","then","data","json","create","src","width","height","alt","title","SubCard","click","setParentHref","ViewHeader","CommitCard","date","Date","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","arg","creater","setDisplay","fetchCommit","message","format","replace","CommitTemplate","elements","commits","style","display","length","map","el","simpleDateFormat","keyCreator","Search","setCommits","visible","setVisible","mutableCommitUrl","commitUrl","onChange","event","filter","toLowerCase","includes","target","value","catch","err","console","log","trim","type","placeholder","id","defaultValue","time","document","getElementById","customDate","originDate","moment","unixtime","alert","setCommitDate","setCommit","Tree","float","arrUrl","fileUrl","split","pop","join","setData","commit","TreeCard","img","settings","mutableUrl","showCode","sethref","window","open","setFileUrl","commitName","commitDate","ViewCode","code","setCode","text","serverURL","serverCommitUrl","App","students","setStudents","treeItems","setTreeItems","filesystemUrl","setFilesystemUrl","setShowCode","Href","setHref","parentHref","onload","getTreeData","dataUrl","state","result","createKey","Math","floor","now","random","toString","createRepository","name","getCommitName","commitTime","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.adcd8806.chunk.js","sourcesContent":["import React from 'react';\nimport './students.css';\n\nfunction StudentsList(props) {\n  return (\n    <section className=\"students-list\">\n      <h2 className=\"title\">Список студентов</h2>\n      <ul className=\"all-students\">{props.children}</ul>\n    </section>\n  );\n}\n\nexport default StudentsList;\n","import React from 'react';\nimport './view.css';\n\nfunction ViewRepository(props) {\n  return (\n    <section className=\"view\">\n          {props.children}\n    </section>\n  );\n}\n\nexport default ViewRepository;\n","import React,{useEffect, useState} from 'react';\nimport './card.css';\n\nfunction Card(props) {\n  let [show, setShow] = useState(false);\n  let [repository, setRepository] = useState([]);\n  \n  const getRepository = ( url ) =>{\n    fetch(`http://10.3.0.105:8030/api${url}`)\n      .then(data => data.json())\n      .then(data => setRepository(props.create(data)))\n  }\n  \n  const showHandler = () => {\n      if(show === false){\n          setShow(cur=> !cur);\n          getRepository(props.href);\n      }else{\n          setShow(cur=> !cur);\n          setRepository([]);\n      }\n  }\n\n  return (\n      <li>\n        <div className=\"card\" onClick={showHandler}>\n          <img className=\"card-img\"src=\"./user.svg\" width=\"28\" height=\"28\" alt=\"user\"/>\n          <p className=\"person\" title={props.title}>{props.title}</p>\n        </div>\n        <ul className=\"sub-card\">{repository}</ul>\n      </li>\n  );\n}\nexport default Card;\n","import React from 'react';\n\nfunction SubCard(props) {\n  return (\n      <li className=\"card\" onClick={()=>{\n          props.click(props.href)\n          props.setParentHref(props.href)\n      }}>\n      <img className=\"card-img\"src=\"./puzzle.svg\" width=\"28\" height=\"28\" alt=\"task\"/>\n        <p>{props.title}</p>\n      </li>\n  );\n}\n\nexport default SubCard;\n","import React from 'react';\nimport './header.css';\nfunction ViewHeader(props) {\n  return(\n    <header className=\"view-header\">\n        <img className=\"view-img\"src=\"./user.svg\" alt=\"user\" width=\"28\" height=\"28\"/>\n        <p>{props.url}</p>\n    </header>\n  )\n}\n\nexport default ViewHeader;\n","import React from 'react';\n\nfunction CommitCard(props){\n    var date = new Date(props.date*1000);\n\n    let formatter = new Intl.DateTimeFormat(\"ru\", {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n    });\n\n    const fetchCommit = ( arg ) =>{\n        let url = props.href+'?commit='+arg;\n        props.creater(url, false);\n        props.setDisplay('none');\n    }  \n    \n    return(\n        <div className=\"commitCard\" onClick={()=>fetchCommit(props.date)}>\n            <p className=\"commitMessage\">{props.message}</p>\n            <p className=\"commitDate\">{formatter.format(date).replace(',', '')}</p>\n        </div>\n    )\n}\n\nexport default CommitCard;","import React from 'react';\nimport CommitCard from './commit-card/commit-card.jsx'\nimport './commit.css'\n\nfunction CommitTemplate(props){\n    let elements = props.commits;\n    return(\n        <section className=\"commitTemplate\" style={{display: props.display}}>\n            {elements.length > 0 ? elements.map(el=> {\n                return  <CommitCard setDisplay={props.setDisplay} href={props.href} creater={props.creater} url={props.url} key={props.keyCreator()} message={el.message} date={el.simpleDateFormat}></CommitCard>\n            }) : <p>Ничего не найдено!</p>}\n        </section>\n    )\n}\n\nexport default CommitTemplate;","import  React, {useState} from 'react';\nimport  './search.css';\nimport  CommitTemplate from '../commits/commit-template.jsx';\nimport moment from 'moment';\n\nfunction Search(props){\n    let [commits, setCommits] = useState([]);\n    let [visible, setVisible] = useState('none');\n    let mutableCommitUrl = props.commitUrl + props.url;\n    \n    const getCommits = ( ) =>{\n        if(visible === 'none'){\n            fetch(mutableCommitUrl)\n                .then(data=>data.json())\n                .then(data=>setCommits(data))\n                .catch(()=>console.log('err'));\n                setVisible('block');\n        }else{\n            setVisible('none');\n            setCommits([])\n        }\n    }\n    \n    const getCommitsOnDate = ( event ) =>{\n        setVisible('block');\n        let time = document.getElementById('time-date');\n        let date = document.getElementById('date-date');\n        let customDate = date.value+' '+time.value+':59';\n        let originDate = moment(customDate, 'DD/MM/YYYY HH:mm:ss').format('DD.MM.YYYY HH:mm:ss');\n\n        if(originDate !== 'Invalid date' && time.value.length < 6 && date.value.length < 11){\n            let unixtime = moment(originDate, 'DD.MM,YYYY HH:mm:ss').format('X');\n            console.log(unixtime)\n            fetch(mutableCommitUrl+'?unixTime='+unixtime)\n                .then(data=>data.json())\n                .then(data=>setCommits(data))\n            \n        }else{\n            setVisible('none');\n            alert('Дата или время, указано не правильно!')\n            time.value = '00:00';\n            date.value = moment(new Date(), 'DD/MM/YYYY').format('DD.MM.YYYY');\n        }\n\n    }\n\n    const searchCommits = ( event ) =>{\n        setVisible('block');\n\n        fetch(mutableCommitUrl)\n        .then(data=>data.json())\n        .then(data=>setCommits(()=>{\n            return data.filter(el=>{ \n                return el.message.toLowerCase().includes(event.target.value.toLowerCase())\n            })\n        }))\n        .catch( err=>console.log(err));\n        \n        if(event.target.value.trim() === ''){\n            setVisible('none')\n        }\n    }\n\n    return(\n        <>\n            <section className=\"search\">\n                <input onChange={searchCommits} className=\"search-input\" type=\"text\" placeholder=\"Поиск\"/>\n                <div className=\"search-item search-item__item\">\n                    <img className=\"search-img\" src=\"./calendar.svg\" alt=\"date\" width=\"22\" height=\"22\"/>\n                    <div className=\"text-item\">\n                        <input id=\"date-date\" className='search-item_date' defaultValue=\"31.12.2021\"type='text'/>\n                        <input id=\"time-date\" className='search-item_date' defaultValue=\"00:00\" type='text'/>\n                        <button className='search-item_date btn-date' onClick={getCommitsOnDate}>Поиск</button>\n                    </div>\n                </div>\n                <div className=\"search-item search-item-i\" onClick={getCommits}>\n                    <img className=\"search-img\" src=\"./select.svg\" alt=\"date\" width=\"22\" height=\"22\"/>\n                    <p className=\"text-item\">\n                        Выбрать коммит\n                    </p>\n                </div>\n            </section>\n            <CommitTemplate  \n                setCommitDate = {props.setCommitDate} \n                setCommit={props.setCommit} \n                setDisplay={setVisible} \n                href={props.href} \n                creater={props.creater} \n                url={props.url} \n                display={visible} \n                commits = {commits} \n                keyCreator={props.keyCreator}\n            />\n        </>\n    )\n}\n\nexport default Search;\n","import React from 'react';\nimport './tree.css'\n\nfunction Tree(props){\n    const parsUrl = ( ) =>{\n        let arrUrl = props.fileUrl.split('/');\n        arrUrl.pop()\n        arrUrl = arrUrl.join('/');\n\n        if(arrUrl.includes('.git')){\n            props.setData(arrUrl)\n            fetch(`http://10.3.0.105:8030/api${arrUrl}?drop=all`)       \n        }\n    }\n\n    return(\n        <div className=\"Tree\">\n            <div style={{display:\"block\", width:\"100%\",height:\"40px\"}}>\n                <button style={{float:'left'}} className=\"prev-Tree\"onClick={parsUrl}>\n                    <img src=\"./back.svg\" alt=\"back\" width=\"22\" height=\"22\"/>\n                </button>\n                <p className=\"commit-naming\" title={props.commit}>Commit: {props.commit}</p>\n            </div>\n            {props.create(props.data, true)}\n        </div>\n    )\n}\n\nexport default Tree;","import React from 'react';\nimport './tree-card.css'\nfunction TreeCard(props){\n    let img;\n    let settings;\n    let mutableUrl = props.url+props.href;\n    \n    if(props.type === 'FOLDER' || props.type === \"REPOSITORY\"){\n        img = <img src=\"./folder.svg\" width=\"22\" height=\"22\"/>;\n        settings = '';\n    }else{\n        img = <img src=\"./file.svg\" width=\"22\" height=\"22\"/>;\n        settings = function(){    \n            return (\n                    <img className=\"tree-card-img\" src=\"./code.svg\" alt=\"date\" width=\"22\" height=\"22\" \n                        onClick={()=>{\n                            props.showCode({display: 'flex'})\n                            props.sethref(mutableUrl)\n                        }} \n                    />\n                )\n        }();\n    }\n\n    let formatter = new Intl.DateTimeFormat(\"ru\", {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n    });\n    \n    const getNewData = ( ) =>{\n        if(props.type !== 'FOLDER' && props.type !== \"REPOSITORY\"){\n            window.open(mutableUrl);\n        }else{\n            fetch(mutableUrl)\n                .then(data => data.json())\n                .then(data => {\n                    props.data(data)\n                    props.setFileUrl(props.href);\n                })\n        }\n    }\n    return(\n        <div className=\"tree-card\">\n            {img}\n            <p className=\"tree-card-item\" onClick={getNewData}>{props.title}</p>\n            <p className=\"tree-card-item\" title={props.commitName}>{props.commitName}</p>\n            <p className=\"tree-card-item\">{formatter.format(props.commitDate*1000).replace(',', '')}</p>\n            {settings}\n        </div>\n    )\n}\n\nexport default TreeCard;\n","import React,{useState} from 'react';\nimport './code.css';\n\nfunction ViewCode(props){\n    let [code, setCode] = useState('');\n    fetch(props.href)\n    .then(data=> data.text())\n    .then(data=> { \n        setCode(data) \n    })    \n    return(\n        <div className=\"bg-view\" style={props.style}>\n                <div className=\"ViewCode\">\n                <img className=\"closeBtn\" onClick={()=>props.showCode({display:\"none\"})} src=\"./close.svg\" alt=\"close\" width=\"22\" height=\"22\" />\n                <pre id=\"code\" className=\"ViewContent\">\n                    {code}        \n                </pre>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewCode;","import                   './app.css';\nimport React, {useState} from 'react';\nimport StudentsList      from './components/students-list/students.jsx';\nimport ViewRepository    from './components/view-repository/view.jsx';\nimport Card              from './components/student-card/card.jsx';\nimport SubCard           from './components/student-card/subcard.jsx';\nimport ViewHeader        from './components/view-repository/view-components/header/header.jsx';\nimport Search            from './components/view-repository/view-components/search/search.jsx'\nimport Tree              from './components/view-repository/view-components/tree/tree.jsx';\nimport TreeCard          from './components/view-repository/view-components/tree/tree-components/tree-card.jsx';\nimport ViewCode          from './components/view-code/code.jsx'\n\n// import Filter            from './components/filter/filter.jsx'\n\n\n\nconst serverURL          = 'http://10.3.105:8030/api';\nconst serverCommitUrl    = 'http://10.3.105:8030/commit';\n\n\nfunction App() {\n  let [students, setStudents] = useState([]);\n  let [treeItems, setTreeItems] = useState([]);\n  let [filesystemUrl, setFilesystemUrl] = useState('')\n  let [showCode, setShowCode] = useState({display: 'none'});\n  let [Href, setHref] = useState('');\n  let [parentHref, setParentHref] = useState('');\n  let [commit, setCommit] = useState('');\n\n  window.onload = function(){\n      fetch(serverURL)\n        .then(data => data.json())\n        .then(data => setStudents(data));\n  }\n\n  const getTreeData = ( dataUrl, state ) =>{\n    let mutableUrl = serverURL + dataUrl;\n    fetch(mutableUrl)\n      .then(data => data.json())\n      .then(data => {\n        if(data?.result){\n          alert(data.result);\n        }else{\n          if(state !== false){\n            setFilesystemUrl(dataUrl);\n          }\n          setTreeItems(data)\n        }\n      })\n  }\n  \n  const createKey = ( ) =>{\n      return Math.floor(Date.now())+Math.random().toString()\n  }\n  \n  const createRepository = ( data ) =>{\n      return data.map(el=>{\n        return(  \n            <SubCard \n              key={createKey()} \n              title={el.name} \n              click={getTreeData} \n              href={el.href}\n              setParentHref={setParentHref}\n            />\n          )\n      })\n  }\n\n  const getCommitName = ( commit ) =>{\n    fetch(serverCommitUrl + parentHref + '/allcommits')\n      .then(data=>data.json())\n      .then(data=>{\n        data.map(el=>{\n          if(+el.simpleDateFormat === commit){\n            setCommit(el.message)\n          }\n        })\n      })\n    } \n\n  const createTreeCard = ( data ) =>{\n      return data.map((el)=>{\n        return ( \n          <TreeCard \n            commitDate={el.commitTime}\n            commit={getCommitName(el.commitTime)}\n            sethref={setHref} \n            showCode={setShowCode} \n            setFileUrl = {setFilesystemUrl} \n            url={serverURL} \n            key={createKey()} \n            title={el.name} \n            href={el.href} \n            type={el.state} \n            data={setTreeItems}\n          />\n        )\n    });\n  }\n\n  return (\n    <section className=\"main-content\">\n      <StudentsList>\n        {\n          students.map(el=>{\n              return (\n                <Card \n                  key={createKey()} \n                  create={createRepository} \n                  title={el.name} \n                  href={el.href}\n                />\n              )\n          })\n        }\n      </StudentsList>\n      <ViewRepository>\n        <ViewHeader url={filesystemUrl}/>\n        <Search href={filesystemUrl} \n              creater={getTreeData} \n              keyCreator={createKey} \n              commitUrl={serverCommitUrl} \n              url={filesystemUrl}\n        />\n        <section className=\"view-content\">\n          <Tree create={createTreeCard} \n              url={serverURL} \n              commit={commit}\n              data={treeItems} \n              setData={getTreeData} \n              fileUrl ={filesystemUrl} \n              setFileUrl = {setFilesystemUrl}\n          />\n        </section>\n      </ViewRepository>\n      <ViewCode style={showCode} showCode={setShowCode} href={Href}/>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}