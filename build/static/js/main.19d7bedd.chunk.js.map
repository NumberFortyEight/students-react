{"version":3,"sources":["app/components/students-list/students.jsx","app/components/view-repository/view.jsx","app/components/student-card/card.jsx","app/components/student-card/subcard.jsx","app/components/view-repository/view-components/header/header.jsx","app/components/view-repository/view-components/commits/commit-card/commit-card.jsx","app/components/view-repository/view-components/commits/commit-template.jsx","app/components/view-repository/view-components/search/search.jsx","app/components/view-repository/view-components/tree/tree.jsx","app/components/view-repository/view-components/tree/tree-components/tree-card.jsx","app/components/view-code/code.jsx","app/components/filter/filter.jsx","app/App.jsx","reportWebVitals.js","index.js"],"names":["StudentsList","props","className","children","ViewRepository","Card","useState","show","setShow","repository","setRepository","onClick","url","cur","href","fetch","then","data","json","create","src","width","height","alt","title","SubCard","click","setParentHref","ViewHeader","CommitCard","date","Date","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","arg","console","log","creater","setDisplay","alert","message","fetchCommit","format","replace","CommitTemplate","elements","commits","style","display","length","map","el","simpleDateFormat","keyCreator","Search","setCommits","visible","setVisible","mutableCommitUrl","commitUrl","onChange","event","filter","toLowerCase","includes","target","value","catch","err","trim","type","placeholder","id","defaultValue","setCommitDate","setCommit","Tree","arrUrl","fileUrl","split","pop","join","setData","TreeCard","img","settings","mutableUrl","showCode","sethref","window","open","setFileUrl","commitName","commitDate","ViewCode","code","setCode","text","Filter","serverURL","serverCommitUrl","App","students","setStudents","treeItems","setTreeItems","filesystemUrl","setFilesystemUrl","setShowCode","Href","setHref","parentHref","commit","onload","getTreeData","dataUrl","state","result","createKey","Math","floor","now","random","toString","createRepository","name","getCommitName","commitTime","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19d7bedd.chunk.js","sourcesContent":["import React from 'react';\nimport './students.css';\n\nfunction StudentsList(props) {\n  return (\n    <section className=\"students-list\">\n      <h2 className=\"title\">Список студентов</h2>\n      <ul className=\"all-students\">{props.children}</ul>\n    </section>\n  );\n}\n\nexport default StudentsList;\n","import React from 'react';\nimport './view.css';\n\nfunction ViewRepository(props) {\n  return (\n    <section className=\"view\">\n          {props.children}\n    </section>\n  );\n}\n\nexport default ViewRepository;\n","import React,{useEffect, useState} from 'react';\nimport './card.css';\n\nfunction Card(props) {\n  let [show, setShow] = useState(false);\n  let [repository, setRepository] = useState([]);\n  \n  const getRepository = ( url ) =>{\n    fetch(`http://10.3.0.105:8030/api${url}`)\n      .then(data => data.json())\n      .then(data => setRepository(props.create(data)))\n  }\n  \n  const showHandler = () => {\n      if(show === false){\n          setShow(cur=> !cur);\n          getRepository(props.href);\n      }else{\n          setShow(cur=> !cur);\n          setRepository([]);\n      }\n  }\n\n  return (\n      <li>\n        <div className=\"card\" onClick={showHandler}>\n          <img className=\"card-img\"src=\"./user.svg\" width=\"28\" height=\"28\" alt=\"user\"/>\n          <p className=\"person\" title={props.title}>{props.title}</p>\n        </div>\n        <ul className=\"sub-card\">{repository}</ul>\n      </li>\n  );\n}\nexport default Card;\n","import React from 'react';\n\nfunction SubCard(props) {\n  return (\n      <li className=\"card\" onClick={()=>{\n          props.click(props.href)\n          props.setParentHref(props.href)\n      }}>\n      <img className=\"card-img\"src=\"./puzzle.svg\" width=\"28\" height=\"28\" alt=\"task\"/>\n        <p>{props.title}</p>\n      </li>\n  );\n}\n\nexport default SubCard;\n","import React from 'react';\nimport './header.css';\nfunction ViewHeader(props) {\n  return(\n    <header className=\"view-header\">\n        <img className=\"view-img\"src=\"./user.svg\" alt=\"user\" width=\"28\" height=\"28\"/>\n        <p>{props.url}</p>\n    </header>\n  )\n}\n\nexport default ViewHeader;\n","import React from 'react';\n\nfunction CommitCard(props){\n    var date = new Date(props.date*1000);\n\n    let formatter = new Intl.DateTimeFormat(\"ru\", {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n    });\n\n    const fetchCommit = ( arg ) =>{\n        let url = props.href+'?commit='+arg;\n        console.log(props.href)\n        props.creater(url, false);\n        props.setDisplay('none');\n        alert(`Коммит  ${props.message}  применен!`)\n    }  \n    return(\n        <div className=\"commitCard\" onClick={()=>fetchCommit(props.date)}>\n            <p className=\"commitMessage\">{props.message}</p>\n            <p className=\"commitDate\">{formatter.format(date).replace(',', '')}</p>\n        </div>\n    )\n}\n\nexport default CommitCard;","import React from 'react';\nimport CommitCard from './commit-card/commit-card.jsx'\nimport './commit.css'\n\nfunction CommitTemplate(props){\n    let elements = props.commits;\n    return(\n        <section className=\"commitTemplate\" style={{display: props.display}}>\n            {elements.length > 0 ? elements.map(el=> {\n                return  <CommitCard setDisplay={props.setDisplay} href={props.href} creater={props.creater} url={props.url} key={props.keyCreator()} message={el.message} date={el.simpleDateFormat}></CommitCard>\n            }) : <p>Ничего не найдено!</p>}\n        </section>\n    )\n}\n\nexport default CommitTemplate;","import  React, {useState} from 'react';\nimport './search.css';\nimport CommitTemplate from '../commits/commit-template.jsx';\n\nfunction Search(props){\n    let [commits, setCommits] = useState([]);\n    let [visible, setVisible] = useState('none');\n    let mutableCommitUrl = props.commitUrl + props.url;\n    \n    const getCommits = ( ) =>{\n        if(visible === 'none'){\n            fetch(mutableCommitUrl)\n            .then(data=>data.json())\n            .then(data=>setCommits(data))\n            .catch(()=>console.log('err'));\n            setVisible('block');\n        }else{\n            setVisible('none');\n            setCommits([])\n        }\n    }\n    \n    const getCommitsOnDate = ( event ) =>{\n        setVisible('block');\n        // let date = document.getElementById('date-date');\n        // let time = document.getElementById('time-date');\n        // console.log(Date.parse(date.value,time.value)/1000-86400)\n        // alert()        \n\n    }\n\n    const searchCommits = ( event ) =>{\n        setVisible('block');\n\n        fetch(mutableCommitUrl)\n        .then(data=>data.json())\n        .then(data=>setCommits(()=>{\n           return data.filter(el=>{ \n               return el.message.toLowerCase().includes(event.target.value.toLowerCase())\n            })\n        }))\n        .catch( err=>console.log('err'));\n        \n        if(event.target.value.trim() === ''){\n            setVisible('none')\n        }\n     }\n    return(\n        <>\n            <section className=\"search\">\n                <input onChange={searchCommits} className=\"search-input\" type=\"text\" placeholder=\"Поиск\"/>\n                <div className=\"search-item\">\n                    <img className=\"search-img\" src=\"./calendar.svg\" alt=\"date\" width=\"22\" height=\"22\"/>\n                    <div className=\"text-item\">\n                        <input id=\"date-date\" className='search-item_date' defaultValue=\"11.12.2021\"type='text'/>\n                        <input id=\"time-date\" className='search-item_date' defaultValue=\"00:00:00\" type='text'/>\n                        <button className='search-item_date' onClick={getCommitsOnDate} >Поиск</button>\n                    </div>\n                </div>\n                <div className=\"search-item search-item-i\" onClick={getCommits}>\n                    <img className=\"search-img\" src=\"./select.svg\" alt=\"date\" width=\"22\" height=\"22\"/>\n                    <p className=\"text-item\">\n                        Выбрать коммит\n                    </p>\n                </div>\n            </section>\n            <CommitTemplate  setCommitDate = {props.setCommitDate} setCommit={props.setCommit} setDisplay={setVisible} href={props.href} creater={props.creater} url={props.url} display={visible} commits = {commits} keyCreator={props.keyCreator}></CommitTemplate>\n        </>\n    )\n}\n\nexport default Search;\n","import React from 'react';\nimport './tree.css'\n\nfunction Tree(props){\n    const parsUrl = ( ) =>{\n        let arrUrl = props.fileUrl.split('/');\n        arrUrl.pop()\n        arrUrl = arrUrl.join('/');\n\n        if(arrUrl.includes('.git')){\n            props.setData(arrUrl)\n        }else{\n            fetch('http://')\n        }\n        \n    }\n\n    return(\n        <div className=\"Tree\">\n            <button className=\"prev-Tree\"onClick={parsUrl}>\n                <img src=\"./back.svg\" alt=\"back\" width=\"22\" height=\"22\"/>\n            </button>\n            {props.create(props.data, true)}\n        </div>\n    )\n}\n\nexport default Tree;","import React from 'react';\nimport './tree-card.css'\nfunction TreeCard(props){\n    let img;\n    let settings;\n    let mutableUrl = props.url+props.href;\n    if(props.type === 'FOLDER' || props.type === \"REPOSITORY\"){\n        img = <img src=\"./folder.svg\" width=\"22\" height=\"22\"/>;\n        settings = '';\n    }else{\n        img = <img src=\"./file.svg\" width=\"22\" height=\"22\"/>;\n        settings = <img onClick={()=>{\n            props.showCode({display: 'flex'})\n            props.sethref(mutableUrl)\n        }} className=\"tree-card-img\" src=\"./code.svg\" alt=\"date\" width=\"22\" height=\"22\"/>;\n    }\n\n    let formatter = new Intl.DateTimeFormat(\"ru\", {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n    });\n    \n    const getNewData = ( ) =>{\n        if(props.type !== 'FOLDER' && props.type !== \"REPOSITORY\"){\n            window.open(mutableUrl);\n        }else{\n            fetch(mutableUrl)\n                .then(data => data.json())\n                .then(data => {\n                    props.data(data)\n                    props.setFileUrl(props.href);\n                })\n        }\n    }\n    return(\n        <div className=\"tree-card\">\n            {img}\n            <p className=\"tree-card-item\" onClick={getNewData}>{props.title}</p>\n            <p className=\"tree-card-item\" title={props.commitName}>{props.commitName}</p>\n            <p className=\"tree-card-item\">{formatter.format(props.commitDate*1000).replace(',', '')}</p>\n            {settings}\n        </div>\n    )\n}\n\nexport default TreeCard;\n","import React,{useState} from 'react';\nimport './code.css';\n\nfunction ViewCode(props){\n    let [code, setCode] = useState('');\n    fetch(props.href)\n    .then(data=> data.text())\n    .then(data=> { \n        setCode(data) \n    })    \n    return(\n        <div className=\"bg-view\" style={props.style}>\n               <div className=\"ViewCode\">\n               <img className=\"closeBtn\" onClick={()=>props.showCode({display:\"none\"})} src=\"./close.svg\" alt=\"close\" width=\"22\" height=\"22\" />\n                <pre id=\"code\" className=\"ViewContent\">\n                    {code}        \n                </pre>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewCode;","import './filter.css'\n\nfunction Filter(){\n    return(\n        <section className=\"filter\">\n            <span className=\"filter-item filter_date\">Фильтр: Взять все коммиты до 01.08.18</span>\n        </section>\n    )\n}\n\nexport default Filter;","import React, {useState} from 'react';\nimport StudentsList      from './components/students-list/students.jsx';\nimport ViewRepository    from './components/view-repository/view.jsx';\nimport Card              from './components/student-card/card.jsx';\nimport SubCard           from './components/student-card/subcard.jsx';\nimport ViewHeader        from './components/view-repository/view-components/header/header.jsx';\nimport Search            from './components/view-repository/view-components/search/search.jsx'\nimport Tree              from './components/view-repository/view-components/tree/tree.jsx';\nimport TreeCard          from './components/view-repository/view-components/tree/tree-components/tree-card.jsx';\nimport ViewCode          from './components/view-code/code.jsx'\nimport Filter            from './components/filter/filter.jsx'\nimport './app.css';\n\nconst serverURL          = 'http://10.3.105:8030/api';\nconst serverCommitUrl    = 'http://10.3.105:8030/commit';\n\n\nfunction App() {\n  let [students, setStudents] = useState([]);\n  let [treeItems, setTreeItems] = useState([]);\n  let [filesystemUrl, setFilesystemUrl] = useState('')\n  let [showCode, setShowCode] = useState({display: 'none'});\n  let [Href, setHref] = useState('');\n  let [parentHref, setParentHref] = useState('');\n  let [commit, setCommit] = useState('');\n\n  window.onload = function(){\n      fetch(serverURL)\n        .then(data => data.json())\n        .then(data => setStudents(data));\n  }\n  const getTreeData = ( dataUrl, state ) =>{\n    let mutableUrl = serverURL + dataUrl;\n    fetch(mutableUrl)\n      .then(data => data.json())\n      .then(data => {\n        if(data?.result){\n          alert(data.result);\n        }else{\n          if(state !== false){\n            setFilesystemUrl(dataUrl);\n          }\n          setTreeItems(data)\n        }\n      })\n  }\n  \n  const createKey = ( ) =>{\n      return Math.floor(Date.now())+Math.random().toString()\n  }\n  \n  const createRepository = ( data ) =>{\n      return data.map(el=>{\n        return  <SubCard \n                  key={createKey()} \n                  title={el.name} \n                  click={getTreeData} \n                  href={el.href}\n                  setParentHref={setParentHref}\n                  />\n              })\n  }\n  const getCommitName = ( commit ) =>{\n    fetch(serverCommitUrl + parentHref + '/allcommits')\n      .then(data=>data.json())\n      .then(data=>{\n        data.map(el=>{\n          if(+el.simpleDateFormat === commit){\n            setCommit(el.message)\n          }\n        })\n      })\n\n  }\n\n  const createTreeCard = ( data ) =>{\n      return data.map(el=>{\n        return  <TreeCard \n                  commitDate={el.commitTime}\n                  commit={getCommitName(el.commitTime)}\n                  commitName = {commit} \n                  sethref={setHref} \n                  showCode={setShowCode} \n                  setFileUrl = {setFilesystemUrl} \n                  url={serverURL} \n                  key={createKey()} \n                  title={el.name} \n                  href={el.href} \n                  type={el.state} \n                  data={setTreeItems}\n        />});\n  }\n  return (\n    <section className=\"main-content\">\n      <StudentsList>\n        {students.map(el=>{\n         return <Card key={createKey()} \n                  create={createRepository} \n                  title={el.name} \n                  href={el.href}/>\n        })}\n      </StudentsList>\n      <ViewRepository>\n        <ViewHeader url={filesystemUrl}/>\n        <Search href={filesystemUrl} \n              creater={getTreeData} \n              keyCreator={createKey} \n              commitUrl={serverCommitUrl} \n              url={filesystemUrl}\n        />\n        <section className=\"view-content\">\n          <Tree create={createTreeCard} \n              url={serverURL} \n              data={treeItems} \n              setData={getTreeData} \n              fileUrl ={filesystemUrl} \n              setFileUrl = {setFilesystemUrl}\n          />\n        </section>\n      </ViewRepository>\n      <ViewCode style={showCode} showCode={setShowCode} href={Href}/>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}